{
  "contractName": "OptimismMarketplace",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NFTListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NFTSold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LISTING_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "listNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "resellNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getListingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getListedNfts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            }
          ],
          "internalType": "struct OptimismMarketplace.NFT[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMyNfts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            }
          ],
          "internalType": "struct OptimismMarketplace.NFT[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMyListedNfts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            }
          ],
          "internalType": "struct OptimismMarketplace.NFT[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct OptimismMarketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct OptimismMarketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct OptimismMarketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"resellNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/optimism/OptimismMarketplace.sol\":\"OptimismMarketplace\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/optimism/OptimismMarketplace.sol\":{\"keccak256\":\"0xfef91707b2e3794a0caa740474edf88acd1a435b20274faccfe491d77f20967a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d6f69a15b79e3b561236b4db333167e206926dd50c9d4028b1538a08b78d87\",\"dweb:/ipfs/QmYWxh3UEUoAMV7wBDGkcXC9urKunspWm23nWXVaKsboiL\"]}},\"version\":1}",
  "bytecode": "0x6080604052655af3107a400060035534801561001a57600080fd5b506001600055600480546001600160a01b03191633179055611083806100416000396000f3fe60806040526004361061007b5760003560e01c80634ddf4f8f1161004e5780634ddf4f8f146100f95780638d6cb3fb1461010c578063b8fe6abe14610121578063c922b17c1461013657600080fd5b8063047b07bf146100805780631f4cc4db146100ab5780632b86ae38146100c057806334f5b624146100e4575b600080fd5b34801561008c57600080fd5b50610095610149565b6040516100a29190610f63565b60405180910390f35b3480156100b757600080fd5b50610095610355565b3480156100cc57600080fd5b506100d660035481565b6040519081526020016100a2565b6100f76100f2366004610f31565b6105b3565b005b6100f7610107366004610f08565b6107de565b34801561011857600080fd5b50610095610a46565b34801561012d57600080fd5b506003546100d6565b6100f7610144366004610f31565b610bf7565b6060600061015660025490565b90506000805b828110156101b7573360056000610174846001610fed565b81526020810191909152604001600020600301546001600160a01b031614156101a557816101a18161101c565b9250505b806101af8161101c565b91505061015c565b5060008167ffffffffffffffff8111156101e157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561024157816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101ff5790505b5090506000805b8481101561034b573360056000610260846001610fed565b81526020810191909152604001600020600301546001600160a01b031614156103395760056000610292836001610fed565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a0820152835184908490811061031f57634e487b7160e01b600052603260045260246000fd5b602002602001018190525081806103359061101c565b9250505b806103438161101c565b915050610248565b5090949350505050565b6060600061036260025490565b90506000805b828110156103f1573360056000610380846001610fed565b81526020810191909152604001600020600201546001600160a01b03161480156103cc5750600560006103b4836001610fed565b815260208101919091526040016000206005015460ff165b156103df57816103db8161101c565b9250505b806103e98161101c565b915050610368565b5060008167ffffffffffffffff81111561041b57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561047b57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816104395790505b5090506000805b8481101561034b57336005600061049a846001610fed565b81526020810191909152604001600020600201546001600160a01b03161480156104e65750600560006104ce836001610fed565b815260208101919091526040016000206005015460ff165b156105a157600560006104fa836001610fed565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a0820152835184908490811061058757634e487b7160e01b600052603260045260246000fd5b6020026020010181905250818061059d9061101c565b9250505b806105ab8161101c565b915050610482565b6002600054141561060b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000558061065d5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610602565b60035434146106ae5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72206c697374696e67206665656044820152606401610602565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156106fc57600080fd5b505af1158015610710573d6000803e3d6000fd5b505050600083815260056020819052604090912060028101805473ffffffffffffffffffffffffffffffffffffffff19908116331790915560038201805490911630179055908101805460ff191660019081179091556004820184905590915061077990610e95565b604080516001600160a01b0386168152602081018590523391810191909152306060820152608081018390527fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d199060a0015b60405180910390a1505060016000555050565b600260005414156108315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610602565b6002600090815581815260056020526040902060048101543410156108be5760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760448201527f20707269636500000000000000000000000000000000000000000000000000006064820152608401610602565b600281015460405133916001600160a01b0316903480156108fc02916000818181858888f193505050501580156108f9573d6000803e3d6000fd5b5060018201546040516323b872dd60e01b81523060048201526001600160a01b0383811660248301526044820192909252908516906323b872dd90606401600060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b50506004546003546040516001600160a01b03909216935080156108fc029250906000818181858888f193505050501580156109a5573d6000803e3d6000fd5b5060038201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831617905560058201805460ff19169055600180548101905560018201546002830154604080516001600160a01b03808916825260208201949094529183169082015290821660608201523460808201527f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd29060a0016107cb565b60606000610a5360025490565b90506000610a6060015490565b610a6a9083611005565b905060008167ffffffffffffffff811115610a9557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610af557816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181610ab35790505b5090506000805b8481101561034b5760056000610b13836001610fed565b815260208101919091526040016000206005015460ff1615610be55760056000610b3e836001610fed565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a08201528351849084908110610bcb57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508180610be19061101c565b9250505b80610bef8161101c565b915050610afc565b60026000541415610c4a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610602565b600260005580610c9c5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610602565b6003543414610ced5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72206c697374696e67206665656044820152606401610602565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b158015610d3b57600080fd5b505af1158015610d4f573d6000803e3d6000fd5b50505050610d61600280546001019055565b6040805160c0810182526001600160a01b0380861682526020808301868152338486018181523060608701818152608088018a8152600160a08a0181815260008e81526005998a90528c90209a518b54908b1673ffffffffffffffffffffffffffffffffffffffff19918216178c559751918b0191909155935160028a018054918a1691881691909117905590516003890180549190981695169490941790955591516004860155905193909101805493151560ff199094169390931790925591517fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1992610e8392879287929087906001600160a01b039586168152602081019490945291841660408401529092166060820152608081019190915260a00190565b60405180910390a15050600160005550565b805480610ee45760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006044820152606401610602565b600019019055565b80356001600160a01b0381168114610f0357600080fd5b919050565b60008060408385031215610f1a578182fd5b610f2383610eec565b946020939093013593505050565b600080600060608486031215610f45578081fd5b610f4e84610eec565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b82811015610fe057815180516001600160a01b039081168652878201518887015286820151811687870152606080830151909116908601526080808201519086015260a09081015115159085015260c09093019290850190600101610f80565b5091979650505050505050565b6000821982111561100057611000611037565b500190565b60008282101561101757611017611037565b500390565b600060001982141561103057611030611037565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207de5c468fe2dc03a846bd6b96d697c999949e83c0394ab59dbb10464021d399164736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80634ddf4f8f1161004e5780634ddf4f8f146100f95780638d6cb3fb1461010c578063b8fe6abe14610121578063c922b17c1461013657600080fd5b8063047b07bf146100805780631f4cc4db146100ab5780632b86ae38146100c057806334f5b624146100e4575b600080fd5b34801561008c57600080fd5b50610095610149565b6040516100a29190610f63565b60405180910390f35b3480156100b757600080fd5b50610095610355565b3480156100cc57600080fd5b506100d660035481565b6040519081526020016100a2565b6100f76100f2366004610f31565b6105b3565b005b6100f7610107366004610f08565b6107de565b34801561011857600080fd5b50610095610a46565b34801561012d57600080fd5b506003546100d6565b6100f7610144366004610f31565b610bf7565b6060600061015660025490565b90506000805b828110156101b7573360056000610174846001610fed565b81526020810191909152604001600020600301546001600160a01b031614156101a557816101a18161101c565b9250505b806101af8161101c565b91505061015c565b5060008167ffffffffffffffff8111156101e157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561024157816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101ff5790505b5090506000805b8481101561034b573360056000610260846001610fed565b81526020810191909152604001600020600301546001600160a01b031614156103395760056000610292836001610fed565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a0820152835184908490811061031f57634e487b7160e01b600052603260045260246000fd5b602002602001018190525081806103359061101c565b9250505b806103438161101c565b915050610248565b5090949350505050565b6060600061036260025490565b90506000805b828110156103f1573360056000610380846001610fed565b81526020810191909152604001600020600201546001600160a01b03161480156103cc5750600560006103b4836001610fed565b815260208101919091526040016000206005015460ff165b156103df57816103db8161101c565b9250505b806103e98161101c565b915050610368565b5060008167ffffffffffffffff81111561041b57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561047b57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816104395790505b5090506000805b8481101561034b57336005600061049a846001610fed565b81526020810191909152604001600020600201546001600160a01b03161480156104e65750600560006104ce836001610fed565b815260208101919091526040016000206005015460ff165b156105a157600560006104fa836001610fed565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a0820152835184908490811061058757634e487b7160e01b600052603260045260246000fd5b6020026020010181905250818061059d9061101c565b9250505b806105ab8161101c565b915050610482565b6002600054141561060b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000558061065d5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610602565b60035434146106ae5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72206c697374696e67206665656044820152606401610602565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156106fc57600080fd5b505af1158015610710573d6000803e3d6000fd5b505050600083815260056020819052604090912060028101805473ffffffffffffffffffffffffffffffffffffffff19908116331790915560038201805490911630179055908101805460ff191660019081179091556004820184905590915061077990610e95565b604080516001600160a01b0386168152602081018590523391810191909152306060820152608081018390527fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d199060a0015b60405180910390a1505060016000555050565b600260005414156108315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610602565b6002600090815581815260056020526040902060048101543410156108be5760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760448201527f20707269636500000000000000000000000000000000000000000000000000006064820152608401610602565b600281015460405133916001600160a01b0316903480156108fc02916000818181858888f193505050501580156108f9573d6000803e3d6000fd5b5060018201546040516323b872dd60e01b81523060048201526001600160a01b0383811660248301526044820192909252908516906323b872dd90606401600060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b50506004546003546040516001600160a01b03909216935080156108fc029250906000818181858888f193505050501580156109a5573d6000803e3d6000fd5b5060038201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831617905560058201805460ff19169055600180548101905560018201546002830154604080516001600160a01b03808916825260208201949094529183169082015290821660608201523460808201527f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd29060a0016107cb565b60606000610a5360025490565b90506000610a6060015490565b610a6a9083611005565b905060008167ffffffffffffffff811115610a9557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610af557816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a08201528252600019909201910181610ab35790505b5090506000805b8481101561034b5760056000610b13836001610fed565b815260208101919091526040016000206005015460ff1615610be55760056000610b3e836001610fed565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a08201528351849084908110610bcb57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508180610be19061101c565b9250505b80610bef8161101c565b915050610afc565b60026000541415610c4a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610602565b600260005580610c9c5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610602565b6003543414610ced5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72206c697374696e67206665656044820152606401610602565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b158015610d3b57600080fd5b505af1158015610d4f573d6000803e3d6000fd5b50505050610d61600280546001019055565b6040805160c0810182526001600160a01b0380861682526020808301868152338486018181523060608701818152608088018a8152600160a08a0181815260008e81526005998a90528c90209a518b54908b1673ffffffffffffffffffffffffffffffffffffffff19918216178c559751918b0191909155935160028a018054918a1691881691909117905590516003890180549190981695169490941790955591516004860155905193909101805493151560ff199094169390931790925591517fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1992610e8392879287929087906001600160a01b039586168152602081019490945291841660408401529092166060820152608081019190915260a00190565b60405180910390a15050600160005550565b805480610ee45760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006044820152606401610602565b600019019055565b80356001600160a01b0381168114610f0357600080fd5b919050565b60008060408385031215610f1a578182fd5b610f2383610eec565b946020939093013593505050565b600080600060608486031215610f45578081fd5b610f4e84610eec565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b82811015610fe057815180516001600160a01b039081168652878201518887015286820151811687870152606080830151909116908601526080808201519086015260a09081015115159085015260c09093019290850190600101610f80565b5091979650505050505050565b6000821982111561100057611000611037565b500190565b60008282101561101757611017611037565b500390565b600060001982141561103057611030611037565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207de5c468fe2dc03a846bd6b96d697c999949e83c0394ab59dbb10464021d399164736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6509:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:14",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:14"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:14"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:14",
                "type": ""
              }
            ],
            "src": "14:196:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "302:177:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "348:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "357:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "365:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "350:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "350:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "350:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "323:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "319:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "319:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "312:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "383:39:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "412:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "393:18:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:29:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "383:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "431:42:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "458:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "469:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "454:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "454:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "441:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "441:32:14"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "431:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "260:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "271:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "283:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "291:6:14",
                "type": ""
              }
            ],
            "src": "215:264:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "588:228:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "634:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "643:6:14"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "651:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "636:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "636:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "636:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "609:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "618:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "605:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "605:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "630:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "601:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "601:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "598:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "669:39:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "698:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "679:18:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:29:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "669:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "717:42:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "744:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "755:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "740:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "727:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:32:14"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "717:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "768:42:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "795:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "806:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "791:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "778:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:32:14"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "538:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "549:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "561:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "569:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "577:6:14",
                "type": ""
              }
            ],
            "src": "484:332:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "986:241:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "996:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1008:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1019:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1004:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1004:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "996:4:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1031:52:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1041:42:14",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1035:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1099:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1114:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1122:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1110:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1110:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1092:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1092:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1146:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1157:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1142:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1142:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1166:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1174:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1162:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1135:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1135:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1198:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1209:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1194:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1194:18:14"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1214:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1187:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1187:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1187:34:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "939:9:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "950:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "958:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "966:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "977:4:14",
                "type": ""
              }
            ],
            "src": "821:406:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1389:241:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1399:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1411:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1407:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1399:4:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1434:52:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1444:42:14",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1438:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1502:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1517:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1525:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1513:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1513:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1495:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1495:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1495:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1549:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1560:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1545:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1545:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1569:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1577:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1565:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1565:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1538:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1538:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1538:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1601:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1612:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1597:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1597:18:14"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1617:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1590:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1590:34:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1342:9:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1353:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1361:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1369:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1380:4:14",
                "type": ""
              }
            ],
            "src": "1232:398:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1864:338:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1874:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1886:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1897:3:14",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1874:4:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1910:52:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1920:42:14",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1914:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1978:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1993:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2001:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1989:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1989:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1971:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1971:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2036:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:18:14"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2041:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2014:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2068:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2079:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2064:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2064:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2088:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2096:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2084:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2084:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2057:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2120:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2131:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2116:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2116:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2140:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2148:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2136:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2136:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2109:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2109:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2109:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2172:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2183:3:14",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2168:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2168:19:14"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2189:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2161:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2161:35:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2161:35:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1801:9:14",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1812:6:14",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1820:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1828:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1836:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1844:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1855:4:14",
                "type": ""
              }
            ],
            "src": "1635:567:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2420:338:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2430:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2442:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2453:3:14",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2438:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2430:4:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2466:52:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2476:42:14",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2470:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2534:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2549:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2557:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2545:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2545:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2527:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2527:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2581:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2592:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2577:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:18:14"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2597:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2570:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2570:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2624:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2635:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2620:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2620:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2644:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2652:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2640:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2640:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2613:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2613:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2676:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2687:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2672:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2672:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2696:6:14"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2704:2:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2692:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2692:15:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2665:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2665:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2665:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2728:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2739:3:14",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2724:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2724:19:14"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2745:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2717:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2717:35:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2717:35:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2357:9:14",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2368:6:14",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2376:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2384:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2392:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2400:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2411:4:14",
                "type": ""
              }
            ],
            "src": "2207:551:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2956:993:14",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2966:12:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2976:2:14",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2970:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2987:32:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3005:9:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3016:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3001:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3001:18:14"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2991:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3035:9:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3046:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3028:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3028:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3028:21:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3058:17:14",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3069:6:14"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3062:3:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3084:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3104:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3098:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:13:14"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3088:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3127:6:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3135:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3120:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3120:22:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3120:22:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3151:12:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3161:2:14",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3155:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3172:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3183:9:14"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3194:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3179:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3179:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3172:3:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3206:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3224:6:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3232:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3220:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3220:15:14"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3210:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3244:13:14",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "3253:4:14"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3248:1:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3315:608:14",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3329:23:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3345:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3339:5:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3339:13:14"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "3333:2:14",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3365:52:14",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3375:42:14",
                          "type": "",
                          "value": "0xffffffffffffffffffffffffffffffffffffffff"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "3369:2:14",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3437:3:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3452:2:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3446:5:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3446:9:14"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3457:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "3442:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3442:18:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3430:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3430:31:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3430:31:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3485:3:14"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3490:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3481:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3481:12:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3505:2:14"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3509:2:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3501:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3501:11:14"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3495:5:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3495:18:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3474:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3474:40:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3474:40:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3538:3:14"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3543:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3534:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3534:12:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "3562:2:14"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "3566:2:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3558:3:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3558:11:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3552:5:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3552:18:14"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3572:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "3548:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3548:27:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3527:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3527:49:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3527:49:14"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3589:14:14",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3599:4:14",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_5",
                            "nodeType": "YulTypedName",
                            "src": "3593:2:14",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3627:3:14"
                                },
                                {
                                  "name": "_5",
                                  "nodeType": "YulIdentifier",
                                  "src": "3632:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3623:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3623:12:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "3651:2:14"
                                        },
                                        {
                                          "name": "_5",
                                          "nodeType": "YulIdentifier",
                                          "src": "3655:2:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3647:3:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3647:11:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3641:5:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3641:18:14"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3661:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "3637:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3637:27:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3616:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3616:49:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3616:49:14"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3678:14:14",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3688:4:14",
                          "type": "",
                          "value": "0x80"
                        },
                        "variables": [
                          {
                            "name": "_6",
                            "nodeType": "YulTypedName",
                            "src": "3682:2:14",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3716:3:14"
                                },
                                {
                                  "name": "_6",
                                  "nodeType": "YulIdentifier",
                                  "src": "3721:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3712:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3712:12:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3736:2:14"
                                    },
                                    {
                                      "name": "_6",
                                      "nodeType": "YulIdentifier",
                                      "src": "3740:2:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3732:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3732:11:14"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3726:5:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3726:18:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3705:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3705:40:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3705:40:14"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3758:14:14",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3768:4:14",
                          "type": "",
                          "value": "0xa0"
                        },
                        "variables": [
                          {
                            "name": "_7",
                            "nodeType": "YulTypedName",
                            "src": "3762:2:14",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3796:3:14"
                                },
                                {
                                  "name": "_7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3801:2:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3792:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3792:12:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "3830:2:14"
                                            },
                                            {
                                              "name": "_7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3834:2:14"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "3826:3:14"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3826:11:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "3820:5:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3820:18:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "3813:6:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3813:26:14"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "3806:6:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3806:34:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3785:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3785:56:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3785:56:14"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3854:21:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3865:3:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3870:4:14",
                              "type": "",
                              "value": "0xc0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3861:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3861:14:14"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3854:3:14"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3888:25:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3902:6:14"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3910:2:14"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3898:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3898:15:14"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3888:6:14"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3277:1:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3280:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3274:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3274:13:14"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3288:18:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3290:14:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3299:1:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3302:1:14",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3295:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3295:9:14"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3290:1:14"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3270:3:14",
                    "statements": []
                  },
                  "src": "3266:657:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3932:11:14",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3940:3:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3932:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2925:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2936:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2947:4:14",
                "type": ""
              }
            ],
            "src": "2763:1186:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4128:177:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4145:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4156:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4138:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4138:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4179:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4190:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4175:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4175:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4195:2:14",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4168:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4168:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4168:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4218:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4229:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4214:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4214:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4234:29:14",
                        "type": "",
                        "value": "Counter: decrement overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4207:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4207:57:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4207:57:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4273:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4285:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4296:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4281:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4281:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4273:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4105:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4119:4:14",
                "type": ""
              }
            ],
            "src": "3954:351:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4484:228:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4501:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4512:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4494:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4494:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4494:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4535:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4546:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4531:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4531:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4551:2:14",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4524:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4524:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4524:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4574:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4585:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4570:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4570:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4590:34:14",
                        "type": "",
                        "value": "Not enough ether to cover asking"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4563:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4563:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4563:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4645:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4656:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4641:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4641:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4661:8:14",
                        "type": "",
                        "value": " price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4634:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4634:36:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4634:36:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4679:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4691:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4702:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4687:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4687:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4679:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4461:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4475:4:14",
                "type": ""
              }
            ],
            "src": "4310:402:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4891:182:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4908:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4919:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4901:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4901:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4901:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4942:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4953:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4938:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4938:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4958:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4931:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4931:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4931:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4981:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4992:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4977:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4977:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4997:34:14",
                        "type": "",
                        "value": "Not enough ether for listing fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4970:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4970:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4970:62:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5041:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5053:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5064:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5049:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5049:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5041:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4868:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4882:4:14",
                "type": ""
              }
            ],
            "src": "4717:356:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5252:181:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5269:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5280:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5262:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5262:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5262:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5303:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5314:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5299:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5299:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5319:2:14",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5292:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5292:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5292:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5342:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5353:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5338:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5338:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5358:33:14",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5331:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5331:61:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5331:61:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5401:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5413:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5424:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5409:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5409:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5401:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5229:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5243:4:14",
                "type": ""
              }
            ],
            "src": "5078:355:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5612:178:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5629:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5640:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5622:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5622:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5622:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5663:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5674:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5659:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5659:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5679:2:14",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5652:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5652:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5652:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5702:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5713:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5698:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5698:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5718:30:14",
                        "type": "",
                        "value": "Price must be at least 1 wei"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5691:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5691:58:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5691:58:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5758:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5770:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5766:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5766:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5758:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5589:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5603:4:14",
                "type": ""
              }
            ],
            "src": "5438:352:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5896:76:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5906:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5918:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5929:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5914:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5906:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5948:9:14"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5959:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5941:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5941:25:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5941:25:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5865:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5876:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5887:4:14",
                "type": ""
              }
            ],
            "src": "5795:177:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6025:80:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6052:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6054:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6054:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6054:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6041:1:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6048:1:14"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6044:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6044:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6038:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6038:13:14"
                  },
                  "nodeType": "YulIf",
                  "src": "6035:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6083:16:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6094:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6097:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6090:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6090:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6083:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6008:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6011:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6017:3:14",
                "type": ""
              }
            ],
            "src": "5977:128:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6159:76:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6181:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6183:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6183:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6183:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6175:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6178:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6172:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6172:8:14"
                  },
                  "nodeType": "YulIf",
                  "src": "6169:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6212:17:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6224:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6227:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6220:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6220:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6212:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6141:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6144:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6150:4:14",
                "type": ""
              }
            ],
            "src": "6110:125:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6287:88:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6318:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6320:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6320:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6320:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6303:5:14"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6314:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6310:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6310:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6300:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6300:17:14"
                  },
                  "nodeType": "YulIf",
                  "src": "6297:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6349:20:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6360:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6367:1:14",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6356:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:13:14"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6349:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6269:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6279:3:14",
                "type": ""
              }
            ],
            "src": "6240:135:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6412:95:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6429:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6436:3:14",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6441:10:14",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6432:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6432:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6422:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6422:31:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6422:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6469:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6472:4:14",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6462:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6462:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6462:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6493:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6496:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6486:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6486:15:14"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6380:127:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := 0xffffffffffffffffffffffffffffffffffffffff\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), and(mload(add(_3, _2)), _4))\n            let _5 := 0x60\n            mstore(add(pos, _5), and(mload(add(_3, _5)), _4))\n            let _6 := 0x80\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            let _7 := 0xa0\n            mstore(add(pos, _7), iszero(iszero(mload(add(_3, _7)))))\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Not enough ether to cover asking\")\n        mstore(add(headStart, 96), \" price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Not enough ether for listing fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price must be at least 1 wei\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "232:4247:12:-:0;;;428:12;399:41;;937:59;;;;;;;;;-1:-1:-1;1701:1:0;1806:7;:22;957:12:12;:34;;-1:-1:-1;;;;;;957:34:12;980:10;957:34;;;232:4247;;;;;;",
  "deployedSourceMap": "232:4247:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3371:512;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3887:590;;;;;;;;;;;;;:::i;399:41::-;;;;;;;;;;;;;;;;;;;5941:25:14;;;5929:2;5914:18;399:41:12;5896:76:14;2261:593:12;;;;;;:::i;:::-;;:::i;:::-;;1637:570;;;;;;:::i;:::-;;:::i;2946:421::-;;;;;;;;;;;;;:::i;2858:84::-;;;;;;;;;;-1:-1:-1;2926:11:12;;2858:84;;1037:580;;;;;;:::i;:::-;;:::i;3371:512::-;3413:12;3433:13;3449:19;:9;918:14:8;;827:112;3449:19:12;3433:35;;3474:15;3504:6;3499:122;3520:8;3516:1;:12;3499:122;;;3572:10;3547:8;:15;3556:5;:1;3560;3556:5;:::i;:::-;3547:15;;;;;;;;;;;-1:-1:-1;3547:15:12;:21;;;-1:-1:-1;;;;;3547:21:12;:35;3543:72;;;3594:12;;;;:::i;:::-;;;;3543:72;3530:3;;;;:::i;:::-;;;;3499:122;;;;3627:17;3657:10;3647:21;;;;;;-1:-1:-1;;;3647:21:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:21:12;;-1:-1:-1;;3647:21:12;;;;;;;;;;;;3627:41;;3674:14;3703:6;3698:164;3719:8;3715:1;:12;3698:164;;;3771:10;3746:8;:15;3755:5;:1;3759;3755:5;:::i;:::-;3746:15;;;;;;;;;;;-1:-1:-1;3746:15:12;:21;;;-1:-1:-1;;;;;3746:21:12;:35;3742:114;;;3811:8;:15;3820:5;:1;3824;3820:5;:::i;:::-;3811:15;;;;;;;;;;;;;;-1:-1:-1;3811:15:12;3793:33;;;;;;;;;-1:-1:-1;;;;;3793:33:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:4;;3798:9;;3793:15;;;;-1:-1:-1;;;3793:15:12;;;;;;;;;;;;;;:33;;;;3836:11;;;;;:::i;:::-;;;;3742:114;3729:3;;;;:::i;:::-;;;;3698:164;;;-1:-1:-1;3874:4:12;;3371:512;-1:-1:-1;;;;3371:512:12:o;3887:590::-;3935:12;3955:13;3971:19;:9;918:14:8;;827:112;3971:19:12;3955:35;;3996:21;4032:6;4027:155;4048:8;4044:1;:12;4027:155;;;4101:10;4075:8;:15;4084:5;:1;4088;4084:5;:::i;:::-;4075:15;;;;;;;;;;;-1:-1:-1;4075:15:12;:22;;;-1:-1:-1;;;;;4075:22:12;:36;:62;;;;-1:-1:-1;4115:8:12;:15;4124:5;:1;4128;4124:5;:::i;:::-;4115:15;;;;;;;;;;;-1:-1:-1;4115:15:12;:22;;;;;4075:62;4071:105;;;4149:18;;;;:::i;:::-;;;;4071:105;4058:3;;;;:::i;:::-;;;;4027:155;;;;4188:17;4218:16;4208:27;;;;;;-1:-1:-1;;;4208:27:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4208:27:12;;-1:-1:-1;;4208:27:12;;;;;;;;;;;;4188:47;;4241:14;4270:6;4265:191;4286:8;4282:1;:12;4265:191;;;4339:10;4313:8;:15;4322:5;:1;4326;4322:5;:::i;:::-;4313:15;;;;;;;;;;;-1:-1:-1;4313:15:12;:22;;;-1:-1:-1;;;;;4313:22:12;:36;:62;;;;-1:-1:-1;4353:8:12;:15;4362:5;:1;4366;4362:5;:::i;:::-;4353:15;;;;;;;;;;;-1:-1:-1;4353:15:12;:22;;;;;4313:62;4309:141;;;4405:8;:15;4414:5;:1;4418;4414:5;:::i;:::-;4405:15;;;;;;;;;;;;;;-1:-1:-1;4405:15:12;4387:33;;;;;;;;;-1:-1:-1;;;;;4387:33:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:4;;4392:9;;4387:15;;;;-1:-1:-1;;;4387:15:12;;;;;;;;;;;;;;:33;;;;4430:11;;;;;:::i;:::-;;;;4309:141;4296:3;;;;:::i;:::-;;;;4265:191;;2261:593;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;5280:2:14;2317:63:0;;;5262:21:14;5319:2;5299:18;;;5292:30;5358:33;5338:18;;;5331:61;5409:18;;2317:63:0;;;;;;;;;1744:1;2455:7;:18;2378:10:12;2370:51:::1;;;::::0;-1:-1:-1;;;2370:51:12;;5640:2:14;2370:51:12::1;::::0;::::1;5622:21:14::0;5679:2;5659:18;;;5652:30;5718;5698:18;;;5691:58;5766:18;;2370:51:12::1;5612:178:14::0;2370:51:12::1;2448:11;;2435:9;:24;2427:69;;;::::0;-1:-1:-1;;;2427:69:12;;4919:2:14;2427:69:12::1;::::0;::::1;4901:21:14::0;;;4938:18;;;4931:30;4997:34;4977:18;;;4970:62;5049:18;;2427:69:12::1;4891:182:14::0;2427:69:12::1;2503:71;::::0;-1:-1:-1;;;2503:71:12;;2538:10:::1;2503:71;::::0;::::1;1092:34:14::0;2558:4:12::1;1142:18:14::0;;;1135:43;1194:18;;;1187:34;;;-1:-1:-1;;;;;2503:34:12;::::1;::::0;::::1;::::0;1004:18:14;;2503:71:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;2581:15:12::1;2599:18:::0;;;:8:::1;:18;::::0;;;;;;;2623:10:::1;::::0;::::1;:32:::0;;-1:-1:-1;;2623:32:12;;::::1;2644:10;2623:32;::::0;;;2661:9:::1;::::0;::::1;:34:::0;;;;::::1;2689:4;2661:34;::::0;;2701:10;;::::1;:17:::0;;-1:-1:-1;;2701:17:12::1;2623:32:::0;2701:17;;::::1;::::0;;;2724:9:::1;::::0;::::1;:18:::0;;;2599;;-1:-1:-1;2749:21:12::1;::::0;:19:::1;:21::i;:::-;2781:68;::::0;;-1:-1:-1;;;;;1989:15:14;;1971:34;;2036:2;2021:18;;2014:34;;;2815:10:12::1;2064:18:14::0;;;2057:43;;;;2835:4:12::1;2131:2:14::0;2116:18;;2109:43;2183:3;2168:19;;2161:35;;;2781:68:12::1;::::0;1897:3:14;1882:19;2781:68:12::1;;;;;;;;-1:-1:-1::0;;1701:1:0;2628:7;:22;-1:-1:-1;;2261:593:12:o;1637:570::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;5280:2:14;2317:63:0;;;5262:21:14;5319:2;5299:18;;;5292:30;5358:33;5338:18;;;5331:61;5409:18;;2317:63:0;5252:181:14;2317:63:0;1744:1;2455:7;:18;;;1745::12;;;:8:::1;:18;::::0;;;;1790:9:::1;::::0;::::1;::::0;1777::::1;:22;;1769:73;;;::::0;-1:-1:-1;;;1769:73:12;;4512:2:14;1769:73:12::1;::::0;::::1;4494:21:14::0;4551:2;4531:18;;;4524:30;4590:34;4570:18;;;4563:62;4661:8;4641:18;;;4634:36;4687:19;;1769:73:12::1;4484:228:14::0;1769:73:12::1;1906:10;::::0;::::1;::::0;1898:39:::1;::::0;1881:10:::1;::::0;-1:-1:-1;;;;;1906:10:12::1;::::0;1927:9:::1;1898:39:::0;::::1;;;::::0;1849:21:::1;1898:39:::0;1849:21;1898:39;1927:9;1906:10;1898:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2000:11:12::1;::::0;::::1;::::0;1943:69:::1;::::0;-1:-1:-1;;;1943:69:12;;1986:4:::1;1943:69;::::0;::::1;1092:34:14::0;-1:-1:-1;;;;;1162:15:14;;;1142:18;;;1135:43;1194:18;;;1187:34;;;;1943::12;;::::1;::::0;::::1;::::0;1004:18:14;;1943:69:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2018:12:12::1;::::0;2040:11:::1;::::0;2018:34:::1;::::0;-1:-1:-1;;;;;2018:12:12;;::::1;::::0;-1:-1:-1;2018:34:12;::::1;;;::::0;-1:-1:-1;2040:11:12;2018:12:::1;:34:::0;:12;:34;2040:11;2018:12;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2058:9:12::1;::::0;::::1;:17:::0;;-1:-1:-1;;2058:17:12::1;-1:-1:-1::0;;;;;2058:17:12;::::1;;::::0;;2081:10:::1;::::0;::::1;:18:::0;;-1:-1:-1;;2081:18:12::1;::::0;;-1:-1:-1;1032:19:8;;;;;;2160:11:12::1;::::0;::::1;::::0;2173:10:::1;::::0;::::1;::::0;2138:64:::1;::::0;;-1:-1:-1;;;;;1989:15:14;;;1971:34;;2036:2;2021:18;;2014:34;;;;2173:10:12;;::::1;2064:18:14::0;;;2057:43;2136:15;;;2131:2;2116:18;;2109:43;2192:9:12::1;2183:3:14::0;2168:19;;2161:35;2138:64:12::1;::::0;1897:3:14;1882:19;2138:64:12::1;1864:338:14::0;2946:421:12;2992:12;3012:16;3031:19;:9;918:14:8;;827:112;3031:19:12;3012:38;;3056:23;3093:19;:9;918:14:8;;827:112;3093:19:12;3082:30;;:8;:30;:::i;:::-;3056:56;;3119:17;3149:15;3139:26;;;;;;-1:-1:-1;;;3139:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3139:26:12;;-1:-1:-1;;3139:26:12;;;;;;;;;;;;3119:46;;3171:14;3200:6;3195:151;3216:8;3212:1;:12;3195:151;;;3243:8;:15;3252:5;:1;3256;3252:5;:::i;:::-;3243:15;;;;;;;;;;;-1:-1:-1;3243:15:12;:22;;;;;3239:101;;;3295:8;:15;3304:5;:1;3308;3304:5;:::i;:::-;3295:15;;;;;;;;;;;;;;-1:-1:-1;3295:15:12;3277:33;;;;;;;;;-1:-1:-1;;;;;3277:33:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:4;;3282:9;;3277:15;;;;-1:-1:-1;;;3277:15:12;;;;;;;;;;;;;;:33;;;;3320:11;;;;;:::i;:::-;;;;3239:101;3226:3;;;;:::i;:::-;;;;3195:151;;1037:580;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;5280:2:14;2317:63:0;;;5262:21:14;5319:2;5299:18;;;5292:30;5358:33;5338:18;;;5331:61;5409:18;;2317:63:0;5252:181:14;2317:63:0;1744:1;2455:7;:18;1152:10:12;1144:51:::1;;;::::0;-1:-1:-1;;;1144:51:12;;5640:2:14;1144:51:12::1;::::0;::::1;5622:21:14::0;5679:2;5659:18;;;5652:30;5718;5698:18;;;5691:58;5766:18;;1144:51:12::1;5612:178:14::0;1144:51:12::1;1222:11;;1209:9;:24;1201:69;;;::::0;-1:-1:-1;;;1201:69:12;;4919:2:14;1201:69:12::1;::::0;::::1;4901:21:14::0;;;4938:18;;;4931:30;4997:34;4977:18;;;4970:62;5049:18;;1201:69:12::1;4891:182:14::0;1201:69:12::1;1277:71;::::0;-1:-1:-1;;;1277:71:12;;1312:10:::1;1277:71;::::0;::::1;1092:34:14::0;1332:4:12::1;1142:18:14::0;;;1135:43;1194:18;;;1187:34;;;-1:-1:-1;;;;;1277:34:12;::::1;::::0;::::1;::::0;1004:18:14;;1277:71:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1355:21;:9;1032:19:8::0;;1050:1;1032:19;;;945:123;1355:21:12::1;1404:128;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1404:128:12;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;1459:10:::1;1404:128:::0;;;;;;1494:4:::1;1404:128:::0;;;;;;;;;;;;1522:4:::1;1404:128:::0;;;;;;-1:-1:-1;1383:18:12;;;:8:::1;:18:::0;;;;;;;:149;;;;;;::::1;-1:-1:-1::0;;1383:149:12;;::::1;;::::0;;;;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;::::1;;-1:-1:-1::0;;1383:149:12;;::::1;::::0;;;::::1;::::0;;;1544:68;;::::1;::::0;::::1;::::0;1415:12;;1435:8;;1494:4;1508:6;;-1:-1:-1;;;;;1989:15:14;;;1971:34;;2036:2;2021:18;;2014:34;;;;2084:15;;;2079:2;2064:18;;2057:43;2136:15;;;2131:2;2116:18;;2109:43;2183:3;2168:19;;2161:35;;;;1897:3;1882:19;;1864:338;1544:68:12::1;;;;;;;;-1:-1:-1::0;;1701:1:0;2628:7;:22;-1:-1:-1;1037:580:12:o;1074:229:8:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:8;;4156:2:14;1177:49:8;;;4138:21:14;4195:2;4175:18;;;4168:30;4234:29;4214:18;;;4207:57;4281:18;;1177:49:8;4128:177:14;1177:49:8;-1:-1:-1;;1277:9:8;1260:26;;1074:229::o;14:196:14:-;82:20;;-1:-1:-1;;;;;131:54:14;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:264::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:2;;;365:6;357;350:22;312:2;393:29;412:9;393:29;:::i;:::-;383:39;469:2;454:18;;;;441:32;;-1:-1:-1;;;302:177:14:o;484:332::-;561:6;569;577;630:2;618:9;609:7;605:23;601:32;598:2;;;651:6;643;636:22;598:2;679:29;698:9;679:29;:::i;:::-;669:39;755:2;740:18;;727:32;;-1:-1:-1;806:2:14;791:18;;;778:32;;588:228;-1:-1:-1;;;588:228:14:o;2763:1186::-;2976:2;3028:21;;;3098:13;;3001:18;;;3120:22;;;2947:4;;2976:2;3161;;3179:18;;;;3220:15;;;2947:4;3266:657;3280:6;3277:1;3274:13;3266:657;;;3339:13;;3446:9;;-1:-1:-1;;;;;3442:18:14;;;3430:31;;3501:11;;;3495:18;3481:12;;;3474:40;3558:11;;;3552:18;3548:27;;3534:12;;;3527:49;3599:4;3647:11;;;3641:18;3637:27;;;3623:12;;;3616:49;3688:4;3732:11;;;3726:18;3712:12;;;3705:40;3768:4;3826:11;;;3820:18;3813:26;3806:34;3792:12;;;3785:56;3870:4;3861:14;;;;3898:15;;;;3302:1;3295:9;3266:657;;;-1:-1:-1;3940:3:14;;2956:993;-1:-1:-1;;;;;;;2956:993:14:o;5977:128::-;6017:3;6048:1;6044:6;6041:1;6038:13;6035:2;;;6054:18;;:::i;:::-;-1:-1:-1;6090:9:14;;6025:80::o;6110:125::-;6150:4;6178:1;6175;6172:8;6169:2;;;6183:18;;:::i;:::-;-1:-1:-1;6220:9:14;;6159:76::o;6240:135::-;6279:3;-1:-1:-1;;6300:17:14;;6297:2;;;6320:18;;:::i;:::-;-1:-1:-1;6367:1:14;6356:13;;6287:88::o;6380:127::-;6441:10;6436:3;6432:20;6429:1;6422:31;6472:4;6469:1;6462:15;6496:4;6493:1;6486:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract OptimismMarketplace is ReentrancyGuard {\n  using Counters for Counters.Counter;\n  Counters.Counter private _nftsSold;\n  Counters.Counter private _nftCount;\n  uint256 public LISTING_FEE = 0.0001 ether;\n  address payable private _marketOwner;\n  mapping(uint256 => NFT) private _idToNFT;\n  struct NFT {\n    address nftContract;\n    uint256 tokenId;\n    address payable seller;\n    address payable owner;\n    uint256 price;\n    bool listed;\n  }\n  event NFTListed(\n    address nftContract,\n    uint256 tokenId,\n    address seller,\n    address owner,\n    uint256 price\n  );\n  event NFTSold(\n    address nftContract,\n    uint256 tokenId,\n    address seller,\n    address owner,\n    uint256 price\n  );\n\n  constructor() {\n    _marketOwner = payable(msg.sender);\n  }\n\n  // List the NFT on the marketplace\n  function listNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {\n    require(_price > 0, \"Price must be at least 1 wei\");\n    require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\");\n\n    IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\n\n    _nftCount.increment();\n\n    _idToNFT[_tokenId] = NFT(\n      _nftContract,\n      _tokenId,\n      payable(msg.sender),\n      payable(address(this)),\n      _price,\n      true\n    );\n\n    emit NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price);\n  }\n\n  // Buy an NFT\n  function buyNft(address _nftContract, uint256 _tokenId) public payable nonReentrant {\n    NFT storage nft = _idToNFT[_tokenId];\n    require(msg.value >= nft.price, \"Not enough ether to cover asking price\");\n\n    address payable buyer = payable(msg.sender);\n    payable(nft.seller).transfer(msg.value);\n    IERC721(_nftContract).transferFrom(address(this), buyer, nft.tokenId);\n    _marketOwner.transfer(LISTING_FEE);\n    nft.owner = buyer;\n    nft.listed = false;\n\n    _nftsSold.increment();\n    emit NFTSold(_nftContract, nft.tokenId, nft.seller, buyer, msg.value);\n  }\n\n  // Resell an NFT purchased from the marketplace\n  function resellNft(address _nftContract, uint256 _tokenId, uint256 _price) public payable nonReentrant {\n    require(_price > 0, \"Price must be at least 1 wei\");\n    require(msg.value == LISTING_FEE, \"Not enough ether for listing fee\");\n\n    IERC721(_nftContract).transferFrom(msg.sender, address(this), _tokenId);\n\n    NFT storage nft = _idToNFT[_tokenId];\n    nft.seller = payable(msg.sender);\n    nft.owner = payable(address(this));\n    nft.listed = true;\n    nft.price = _price;\n\n    _nftsSold.decrement();\n    emit NFTListed(_nftContract, _tokenId, msg.sender, address(this), _price);\n  }\n\n  function getListingFee() public view returns (uint256) {\n    return LISTING_FEE;\n  }\n\n  function getListedNfts() public view returns (NFT[] memory) {\n    uint256 nftCount = _nftCount.current();\n    uint256 unsoldNftsCount = nftCount - _nftsSold.current();\n\n    NFT[] memory nfts = new NFT[](unsoldNftsCount);\n    uint nftsIndex = 0;\n    for (uint i = 0; i < nftCount; i++) {\n      if (_idToNFT[i + 1].listed) {\n        nfts[nftsIndex] = _idToNFT[i + 1];\n        nftsIndex++;\n      }\n    }\n    return nfts;\n  }\n\n  function getMyNfts() public view returns (NFT[] memory) {\n    uint nftCount = _nftCount.current();\n    uint myNftCount = 0;\n    for (uint i = 0; i < nftCount; i++) {\n      if (_idToNFT[i + 1].owner == msg.sender) {\n        myNftCount++;\n      }\n    }\n\n    NFT[] memory nfts = new NFT[](myNftCount);\n    uint nftsIndex = 0;\n    for (uint i = 0; i < nftCount; i++) {\n      if (_idToNFT[i + 1].owner == msg.sender) {\n        nfts[nftsIndex] = _idToNFT[i + 1];\n        nftsIndex++;\n      }\n    }\n    return nfts;\n  }\n\n  function getMyListedNfts() public view returns (NFT[] memory) {\n    uint nftCount = _nftCount.current();\n    uint myListedNftCount = 0;\n    for (uint i = 0; i < nftCount; i++) {\n      if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {\n        myListedNftCount++;\n      }\n    }\n\n    NFT[] memory nfts = new NFT[](myListedNftCount);\n    uint nftsIndex = 0;\n    for (uint i = 0; i < nftCount; i++) {\n      if (_idToNFT[i + 1].seller == msg.sender && _idToNFT[i + 1].listed) {\n        nfts[nftsIndex] = _idToNFT[i + 1];\n        nftsIndex++;\n      }\n    }\n    return nfts;\n  }\n}",
  "sourcePath": "/Users/emilylin/dev/demo/bridge-demo/truffle/contracts/optimism/OptimismMarketplace.sol",
  "ast": {
    "absolutePath": "project:/contracts/optimism/OptimismMarketplace.sol",
    "exportedSymbols": {
      "Address": [
        1487
      ],
      "Context": [
        1509
      ],
      "Counters": [
        1583
      ],
      "ERC165": [
        1833
      ],
      "ERC721": [
        906
      ],
      "IERC165": [
        1845
      ],
      "IERC721": [
        1022
      ],
      "IERC721Metadata": [
        1192
      ],
      "IERC721Receiver": [
        1040
      ],
      "OptimismMarketplace": [
        2482
      ],
      "ReentrancyGuard": [
        39
      ],
      "Strings": [
        1809
      ]
    },
    "id": 2483,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1847,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:12"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 1584,
        "src": "57:52:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 907,
        "src": "110:57:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 40,
        "src": "168:62:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1851,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39,
              "src": "264:15:12"
            },
            "id": 1852,
            "nodeType": "InheritanceSpecifier",
            "src": "264:15:12"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2482,
        "linearizedBaseContracts": [
          2482,
          39
        ],
        "name": "OptimismMarketplace",
        "nameLocation": "241:19:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1856,
            "libraryName": {
              "id": 1853,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1583,
              "src": "290:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "284:36:12",
            "typeName": {
              "id": 1855,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1854,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1515,
                "src": "303:16:12"
              },
              "referencedDeclaration": 1515,
              "src": "303:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1515_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 1859,
            "mutability": "mutable",
            "name": "_nftsSold",
            "nameLocation": "348:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "323:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1515_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1858,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1857,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1515,
                "src": "323:16:12"
              },
              "referencedDeclaration": 1515,
              "src": "323:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1515_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1862,
            "mutability": "mutable",
            "name": "_nftCount",
            "nameLocation": "386:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "361:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1515_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 1861,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1860,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1515,
                "src": "361:16:12"
              },
              "referencedDeclaration": 1515,
              "src": "361:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1515_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2b86ae38",
            "id": 1865,
            "mutability": "mutable",
            "name": "LISTING_FEE",
            "nameLocation": "414:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "399:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1863,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e30303031",
              "id": 1864,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "428:12:12",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000_by_1",
                "typeString": "int_const 100000000000000"
              },
              "value": "0.0001"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1867,
            "mutability": "mutable",
            "name": "_marketOwner",
            "nameLocation": "468:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "444:36:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1866,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "444:15:12",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1872,
            "mutability": "mutable",
            "name": "_idToNFT",
            "nameLocation": "516:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 2482,
            "src": "484:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
              "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT)"
            },
            "typeName": {
              "id": 1871,
              "keyType": {
                "id": 1868,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "492:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "484:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT)"
              },
              "valueType": {
                "id": 1870,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1869,
                  "name": "NFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1885,
                  "src": "503:3:12"
                },
                "referencedDeclaration": 1885,
                "src": "503:3:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                  "typeString": "struct OptimismMarketplace.NFT"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "OptimismMarketplace.NFT",
            "id": 1885,
            "members": [
              {
                "constant": false,
                "id": 1874,
                "mutability": "mutable",
                "name": "nftContract",
                "nameLocation": "553:11:12",
                "nodeType": "VariableDeclaration",
                "scope": 1885,
                "src": "545:19:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1873,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "545:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1876,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "578:7:12",
                "nodeType": "VariableDeclaration",
                "scope": 1885,
                "src": "570:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1875,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1878,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "607:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 1885,
                "src": "591:22:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1877,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:15:12",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1880,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "635:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 1885,
                "src": "619:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1879,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "619:15:12",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1882,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "654:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 1885,
                "src": "646:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1881,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1884,
                "mutability": "mutable",
                "name": "listed",
                "nameLocation": "670:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 1885,
                "src": "665:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1883,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NFT",
            "nameLocation": "535:3:12",
            "nodeType": "StructDefinition",
            "scope": 2482,
            "src": "528:153:12",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1897,
            "name": "NFTListed",
            "nameLocation": "690:9:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1887,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "713:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "705:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1889,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "738:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "730:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1891,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "759:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "751:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "779:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "771:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "798:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "790:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "699:108:12"
            },
            "src": "684:124:12"
          },
          {
            "anonymous": false,
            "id": 1909,
            "name": "NFTSold",
            "nameLocation": "817:7:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1899,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "838:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "830:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1901,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "863:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "855:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1903,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "884:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "876:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1905,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "904:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "896:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "923:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "915:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:108:12"
            },
            "src": "811:122:12"
          },
          {
            "body": {
              "id": 1920,
              "nodeType": "Block",
              "src": "951:45:12",
              "statements": [
                {
                  "expression": {
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1912,
                      "name": "_marketOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1867,
                      "src": "957:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1915,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "980:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "980:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "972:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1913,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:8:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "957:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "957:34:12"
                }
              ]
            },
            "id": 1921,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:2:12"
            },
            "returnParameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:12"
            },
            "scope": 2482,
            "src": "937:59:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2000,
              "nodeType": "Block",
              "src": "1138:479:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1933,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "1152:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1161:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1152:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206d757374206265206174206c65617374203120776569",
                        "id": 1936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          "typeString": "literal_string \"Price must be at least 1 wei\""
                        },
                        "value": "Price must be at least 1 wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          "typeString": "literal_string \"Price must be at least 1 wei\""
                        }
                      ],
                      "id": 1932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1144:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1940,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1209:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1209:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1942,
                          "name": "LISTING_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1865,
                          "src": "1222:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1209:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565",
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1235:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
                          "typeString": "literal_string \"Not enough ether for listing fee\""
                        },
                        "value": "Not enough ether for listing fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
                          "typeString": "literal_string \"Not enough ether for listing fee\""
                        }
                      ],
                      "id": 1939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1201:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1201:69:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1946,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:69:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1951,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1312:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1312:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1955,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1332:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          ],
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1324:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1324:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1324:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1957,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "1339:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1948,
                            "name": "_nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "1285:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1947,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1022,
                          "src": "1277:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1022_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1277:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1022",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 1950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 987,
                      "src": "1277:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:71:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:71:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1960,
                        "name": "_nftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "1355:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1515_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "1355:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1515_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1964,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:21:12"
                },
                {
                  "expression": {
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1965,
                        "name": "_idToNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1872,
                        "src": "1383:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                          "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                        }
                      },
                      "id": 1967,
                      "indexExpression": {
                        "id": 1966,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "1392:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1383:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_storage",
                        "typeString": "struct OptimismMarketplace.NFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1969,
                          "name": "_nftContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1923,
                          "src": "1415:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1970,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "1435:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1973,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1459:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1459:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1451:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1971,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1451:8:12",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1451:19:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1980,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1494:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                                    "typeString": "contract OptimismMarketplace"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                                    "typeString": "contract OptimismMarketplace"
                                  }
                                ],
                                "id": 1979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1486:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1978,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1486:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1486:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1478:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1976,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1478:8:12",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1478:22:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 1983,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "1508:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 1984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1522:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1968,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1885,
                        "src": "1404:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_NFT_$1885_storage_ptr_$",
                          "typeString": "type(struct OptimismMarketplace.NFT storage pointer)"
                        }
                      },
                      "id": 1985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1404:128:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                        "typeString": "struct OptimismMarketplace.NFT memory"
                      }
                    },
                    "src": "1383:149:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$1885_storage",
                      "typeString": "struct OptimismMarketplace.NFT storage ref"
                    }
                  },
                  "id": 1987,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:149:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1989,
                        "name": "_nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1923,
                        "src": "1554:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1990,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "1568:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1578:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1578:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1995,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1598:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          ],
                          "id": 1994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1590:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1993,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1590:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1590:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1997,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1927,
                        "src": "1605:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1988,
                      "name": "NFTListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1897,
                      "src": "1544:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:68:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1999,
                  "nodeType": "EmitStatement",
                  "src": "1539:73:12"
                }
              ]
            },
            "functionSelector": "c922b17c",
            "id": 2001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1929,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "1125:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1125:12:12"
              }
            ],
            "name": "listNft",
            "nameLocation": "1046:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "_nftContract",
                  "nameLocation": "1062:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2001,
                  "src": "1054:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1925,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1084:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2001,
                  "src": "1076:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1102:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2001,
                  "src": "1094:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1053:56:12"
            },
            "returnParameters": {
              "id": 1931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:0:12"
            },
            "scope": 2482,
            "src": "1037:580:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2091,
              "nodeType": "Block",
              "src": "1721:486:12",
              "statements": [
                {
                  "assignments": [
                    2012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2012,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "1739:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2091,
                      "src": "1727:15:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                        "typeString": "struct OptimismMarketplace.NFT"
                      },
                      "typeName": {
                        "id": 2011,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2010,
                          "name": "NFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1885,
                          "src": "1727:3:12"
                        },
                        "referencedDeclaration": 1885,
                        "src": "1727:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2016,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2013,
                      "name": "_idToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1872,
                      "src": "1745:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                        "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                      }
                    },
                    "id": 2015,
                    "indexExpression": {
                      "id": 2014,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2005,
                      "src": "1754:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1745:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$1885_storage",
                      "typeString": "struct OptimismMarketplace.NFT storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1727:36:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2018,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1777:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1777:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2020,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2012,
                            "src": "1790:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                              "typeString": "struct OptimismMarketplace.NFT storage pointer"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1882,
                          "src": "1790:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1777:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67207072696365",
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
                          "typeString": "literal_string \"Not enough ether to cover asking price\""
                        },
                        "value": "Not enough ether to cover asking price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
                          "typeString": "literal_string \"Not enough ether to cover asking price\""
                        }
                      ],
                      "id": 2017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1769:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:73:12"
                },
                {
                  "assignments": [
                    2027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2027,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "1865:5:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2091,
                      "src": "1849:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2026,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:15:12",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2033,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2030,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1881:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1881:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1873:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1873:8:12",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2040,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1927:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1927:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2036,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2012,
                              "src": "1906:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                                "typeString": "struct OptimismMarketplace.NFT storage pointer"
                              }
                            },
                            "id": 2037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1878,
                            "src": "1906:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1898:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1898:8:12",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:19:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1898:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2050,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1986:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          ],
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1978:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1978:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1978:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2052,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "1993:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 2053,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2012,
                          "src": "2000:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT storage pointer"
                          }
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1876,
                        "src": "2000:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2045,
                            "name": "_nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "1951:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2044,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1022,
                          "src": "1943:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1022_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1022",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 2047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 987,
                      "src": "1943:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:69:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2056,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:69:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2060,
                        "name": "LISTING_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1865,
                        "src": "2040:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2057,
                        "name": "_marketOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1867,
                        "src": "2018:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2018:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:34:12"
                },
                {
                  "expression": {
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2063,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "2058:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT storage pointer"
                        }
                      },
                      "id": 2065,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1880,
                      "src": "2058:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2066,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2027,
                      "src": "2070:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2058:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:17:12"
                },
                {
                  "expression": {
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2069,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "2081:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT storage pointer"
                        }
                      },
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "listed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1884,
                      "src": "2081:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2094:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2081:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:18:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2075,
                        "name": "_nftsSold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "2106:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1515_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "2106:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1515_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2106:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "2106:21:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2081,
                        "name": "_nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "2146:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2082,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2012,
                          "src": "2160:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT storage pointer"
                          }
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1876,
                        "src": "2160:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2084,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2012,
                          "src": "2173:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT storage pointer"
                          }
                        },
                        "id": 2085,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1878,
                        "src": "2173:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2086,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "2185:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 2087,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2192:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2192:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2080,
                      "name": "NFTSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "2138:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2090,
                  "nodeType": "EmitStatement",
                  "src": "2133:69:12"
                }
              ]
            },
            "functionSelector": "4ddf4f8f",
            "id": 2092,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2008,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2007,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "1708:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1708:12:12"
              }
            ],
            "name": "buyNft",
            "nameLocation": "1646:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "_nftContract",
                  "nameLocation": "1661:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "1653:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2005,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1683:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "1675:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1652:40:12"
            },
            "returnParameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1721:0:12"
            },
            "scope": 2482,
            "src": "1637:570:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2189,
              "nodeType": "Block",
              "src": "2364:490:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2104,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "2378:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2387:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2378:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206d757374206265206174206c65617374203120776569",
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          "typeString": "literal_string \"Price must be at least 1 wei\""
                        },
                        "value": "Price must be at least 1 wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          "typeString": "literal_string \"Price must be at least 1 wei\""
                        }
                      ],
                      "id": 2103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2370:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2111,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2435:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2435:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2113,
                          "name": "LISTING_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1865,
                          "src": "2448:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2435:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468657220666f72206c697374696e6720666565",
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2461:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
                          "typeString": "literal_string \"Not enough ether for listing fee\""
                        },
                        "value": "Not enough ether for listing fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d97a600adfcd69f2c93077fd04e6f818a6ca96eefbfeba0d0d7700ba3579b21f",
                          "typeString": "literal_string \"Not enough ether for listing fee\""
                        }
                      ],
                      "id": 2110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2427:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:69:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:69:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2538:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2538:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2126,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2558:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          ],
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2550:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2550:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2550:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2128,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "2565:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2119,
                            "name": "_nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "2511:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2118,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1022,
                          "src": "2503:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1022_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 2120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2503:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1022",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 2121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 987,
                      "src": "2503:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:71:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:71:12"
                },
                {
                  "assignments": [
                    2133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2133,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2593:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2189,
                      "src": "2581:15:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                        "typeString": "struct OptimismMarketplace.NFT"
                      },
                      "typeName": {
                        "id": 2132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2131,
                          "name": "NFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1885,
                          "src": "2581:3:12"
                        },
                        "referencedDeclaration": 1885,
                        "src": "2581:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2137,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2134,
                      "name": "_idToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1872,
                      "src": "2599:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                        "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                      }
                    },
                    "id": 2136,
                    "indexExpression": {
                      "id": 2135,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2096,
                      "src": "2608:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2599:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$1885_storage",
                      "typeString": "struct OptimismMarketplace.NFT storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2581:36:12"
                },
                {
                  "expression": {
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2138,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "2623:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT storage pointer"
                        }
                      },
                      "id": 2140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1878,
                      "src": "2623:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2644:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2644:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2636:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2636:8:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2636:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2623:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:32:12"
                },
                {
                  "expression": {
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2148,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "2661:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT storage pointer"
                        }
                      },
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1880,
                      "src": "2661:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2155,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2689:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                                "typeString": "contract OptimismMarketplace"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                                "typeString": "contract OptimismMarketplace"
                              }
                            ],
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2681:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2681:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2681:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2673:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2673:8:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2673:22:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2661:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2159,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:34:12"
                },
                {
                  "expression": {
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2160,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "2701:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT storage pointer"
                        }
                      },
                      "id": 2162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "listed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1884,
                      "src": "2701:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2714:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2701:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:17:12"
                },
                {
                  "expression": {
                    "id": 2170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2166,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "2724:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT storage pointer"
                        }
                      },
                      "id": 2168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1882,
                      "src": "2724:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2169,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2098,
                      "src": "2736:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2724:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2171,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:18:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2172,
                        "name": "_nftsSold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "2749:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1515_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decrement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1569,
                      "src": "2749:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1515_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2176,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:21:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2178,
                        "name": "_nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "2791:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2179,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "2805:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2815:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2815:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2835:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismMarketplace_$2482",
                              "typeString": "contract OptimismMarketplace"
                            }
                          ],
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2827:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2827:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2827:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2186,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2098,
                        "src": "2842:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2177,
                      "name": "NFTListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1897,
                      "src": "2781:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 2187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:68:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2188,
                  "nodeType": "EmitStatement",
                  "src": "2776:73:12"
                }
              ]
            },
            "functionSelector": "34f5b624",
            "id": 2190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2100,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "2351:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2351:12:12"
              }
            ],
            "name": "resellNft",
            "nameLocation": "2270:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2094,
                  "mutability": "mutable",
                  "name": "_nftContract",
                  "nameLocation": "2288:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2190,
                  "src": "2280:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2096,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2310:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2190,
                  "src": "2302:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2328:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2190,
                  "src": "2320:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2320:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2279:56:12"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2364:0:12"
            },
            "scope": 2482,
            "src": "2261:593:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2197,
              "nodeType": "Block",
              "src": "2913:29:12",
              "statements": [
                {
                  "expression": {
                    "id": 2195,
                    "name": "LISTING_FEE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1865,
                    "src": "2926:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2194,
                  "id": 2196,
                  "nodeType": "Return",
                  "src": "2919:18:12"
                }
              ]
            },
            "functionSelector": "b8fe6abe",
            "id": 2198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListingFee",
            "nameLocation": "2867:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2880:2:12"
            },
            "returnParameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2198,
                  "src": "2904:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2903:9:12"
            },
            "scope": 2482,
            "src": "2858:84:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2270,
              "nodeType": "Block",
              "src": "3006:361:12",
              "statements": [
                {
                  "assignments": [
                    2206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2206,
                      "mutability": "mutable",
                      "name": "nftCount",
                      "nameLocation": "3020:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "3012:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3012:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2210,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2207,
                        "name": "_nftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "3031:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1515_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1527,
                      "src": "3031:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1515_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3031:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3012:38:12"
                },
                {
                  "assignments": [
                    2212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2212,
                      "mutability": "mutable",
                      "name": "unsoldNftsCount",
                      "nameLocation": "3064:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "3056:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3056:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2218,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2213,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "3082:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2214,
                          "name": "_nftsSold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1859,
                          "src": "3093:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1515_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 2215,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1527,
                        "src": "3093:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1515_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3093:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3082:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3056:56:12"
                },
                {
                  "assignments": [
                    2223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2223,
                      "mutability": "mutable",
                      "name": "nfts",
                      "nameLocation": "3132:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "3119:17:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OptimismMarketplace.NFT[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2221,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2220,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1885,
                            "src": "3119:3:12"
                          },
                          "referencedDeclaration": 1885,
                          "src": "3119:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT"
                          }
                        },
                        "id": 2222,
                        "nodeType": "ArrayTypeName",
                        "src": "3119:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2230,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2228,
                        "name": "unsoldNftsCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "3149:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3139:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct OptimismMarketplace.NFT memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2225,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2224,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1885,
                            "src": "3143:3:12"
                          },
                          "referencedDeclaration": 1885,
                          "src": "3143:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT"
                          }
                        },
                        "id": 2226,
                        "nodeType": "ArrayTypeName",
                        "src": "3143:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT[]"
                        }
                      }
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3139:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3119:46:12"
                },
                {
                  "assignments": [
                    2232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2232,
                      "mutability": "mutable",
                      "name": "nftsIndex",
                      "nameLocation": "3176:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "3171:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2231,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3171:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2234,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3188:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3171:18:12"
                },
                {
                  "body": {
                    "id": 2266,
                    "nodeType": "Block",
                    "src": "3231:115:12",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "baseExpression": {
                              "id": 2245,
                              "name": "_idToNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1872,
                              "src": "3243:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                              }
                            },
                            "id": 2249,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2246,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "3252:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3256:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3252:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3243:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$1885_storage",
                              "typeString": "struct OptimismMarketplace.NFT storage ref"
                            }
                          },
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1884,
                          "src": "3243:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2265,
                        "nodeType": "IfStatement",
                        "src": "3239:101:12",
                        "trueBody": {
                          "id": 2264,
                          "nodeType": "Block",
                          "src": "3267:73:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2251,
                                    "name": "nfts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2223,
                                    "src": "3277:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                                    }
                                  },
                                  "id": 2253,
                                  "indexExpression": {
                                    "id": 2252,
                                    "name": "nftsIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2232,
                                    "src": "3282:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3277:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                                    "typeString": "struct OptimismMarketplace.NFT memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2254,
                                    "name": "_idToNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1872,
                                    "src": "3295:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                      "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                    }
                                  },
                                  "id": 2258,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2255,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2236,
                                      "src": "3304:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2256,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3308:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3304:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3295:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                    "typeString": "struct OptimismMarketplace.NFT storage ref"
                                  }
                                },
                                "src": "3277:33:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                                  "typeString": "struct OptimismMarketplace.NFT memory"
                                }
                              },
                              "id": 2260,
                              "nodeType": "ExpressionStatement",
                              "src": "3277:33:12"
                            },
                            {
                              "expression": {
                                "id": 2262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3320:11:12",
                                "subExpression": {
                                  "id": 2261,
                                  "name": "nftsIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2232,
                                  "src": "3320:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2263,
                              "nodeType": "ExpressionStatement",
                              "src": "3320:11:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2239,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2236,
                      "src": "3212:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2240,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "3216:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3212:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2267,
                  "initializationExpression": {
                    "assignments": [
                      2236
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2236,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3205:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "3200:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2235,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3200:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2238,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3209:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3200:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3226:3:12",
                      "subExpression": {
                        "id": 2242,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "3226:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2244,
                    "nodeType": "ExpressionStatement",
                    "src": "3226:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3195:151:12"
                },
                {
                  "expression": {
                    "id": 2268,
                    "name": "nfts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2223,
                    "src": "3358:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2204,
                  "id": 2269,
                  "nodeType": "Return",
                  "src": "3351:11:12"
                }
              ]
            },
            "functionSelector": "8d6cb3fb",
            "id": 2271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListedNfts",
            "nameLocation": "2955:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:2:12"
            },
            "returnParameters": {
              "id": 2204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2271,
                  "src": "2992:12:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct OptimismMarketplace.NFT[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2201,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2200,
                        "name": "NFT",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "2992:3:12"
                      },
                      "referencedDeclaration": 1885,
                      "src": "2992:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                        "typeString": "struct OptimismMarketplace.NFT"
                      }
                    },
                    "id": 2202,
                    "nodeType": "ArrayTypeName",
                    "src": "2992:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                      "typeString": "struct OptimismMarketplace.NFT[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:14:12"
            },
            "scope": 2482,
            "src": "2946:421:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2368,
              "nodeType": "Block",
              "src": "3427:456:12",
              "statements": [
                {
                  "assignments": [
                    2279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2279,
                      "mutability": "mutable",
                      "name": "nftCount",
                      "nameLocation": "3438:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2368,
                      "src": "3433:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3433:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2283,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2280,
                        "name": "_nftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "3449:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1515_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1527,
                      "src": "3449:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1515_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3433:35:12"
                },
                {
                  "assignments": [
                    2285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2285,
                      "mutability": "mutable",
                      "name": "myNftCount",
                      "nameLocation": "3479:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2368,
                      "src": "3474:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2284,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3474:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2287,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3492:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3474:19:12"
                },
                {
                  "body": {
                    "id": 2312,
                    "nodeType": "Block",
                    "src": "3535:86:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2298,
                                "name": "_idToNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "3547:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                  "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                }
                              },
                              "id": 2302,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2299,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2289,
                                  "src": "3556:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2300,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3560:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3556:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3547:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                "typeString": "struct OptimismMarketplace.NFT storage ref"
                              }
                            },
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1880,
                            "src": "3547:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3572:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3572:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3547:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2311,
                        "nodeType": "IfStatement",
                        "src": "3543:72:12",
                        "trueBody": {
                          "id": 2310,
                          "nodeType": "Block",
                          "src": "3584:31:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3594:12:12",
                                "subExpression": {
                                  "id": 2307,
                                  "name": "myNftCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2285,
                                  "src": "3594:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2309,
                              "nodeType": "ExpressionStatement",
                              "src": "3594:12:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2292,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2289,
                      "src": "3516:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2293,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "3520:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3516:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2313,
                  "initializationExpression": {
                    "assignments": [
                      2289
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2289,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3509:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "3504:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2288,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3504:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2291,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3513:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3504:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3530:3:12",
                      "subExpression": {
                        "id": 2295,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "3530:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2297,
                    "nodeType": "ExpressionStatement",
                    "src": "3530:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3499:122:12"
                },
                {
                  "assignments": [
                    2318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2318,
                      "mutability": "mutable",
                      "name": "nfts",
                      "nameLocation": "3640:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2368,
                      "src": "3627:17:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OptimismMarketplace.NFT[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2316,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2315,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1885,
                            "src": "3627:3:12"
                          },
                          "referencedDeclaration": 1885,
                          "src": "3627:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT"
                          }
                        },
                        "id": 2317,
                        "nodeType": "ArrayTypeName",
                        "src": "3627:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2325,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2323,
                        "name": "myNftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2285,
                        "src": "3657:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3647:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct OptimismMarketplace.NFT memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2320,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2319,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1885,
                            "src": "3651:3:12"
                          },
                          "referencedDeclaration": 1885,
                          "src": "3651:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT"
                          }
                        },
                        "id": 2321,
                        "nodeType": "ArrayTypeName",
                        "src": "3651:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT[]"
                        }
                      }
                    },
                    "id": 2324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3647:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3627:41:12"
                },
                {
                  "assignments": [
                    2327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2327,
                      "mutability": "mutable",
                      "name": "nftsIndex",
                      "nameLocation": "3679:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2368,
                      "src": "3674:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2326,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2329,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3691:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:18:12"
                },
                {
                  "body": {
                    "id": 2364,
                    "nodeType": "Block",
                    "src": "3734:128:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2340,
                                "name": "_idToNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "3746:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                  "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                }
                              },
                              "id": 2344,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2341,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2331,
                                  "src": "3755:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3759:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3755:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3746:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                "typeString": "struct OptimismMarketplace.NFT storage ref"
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1880,
                            "src": "3746:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2346,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3771:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3771:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3746:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2363,
                        "nodeType": "IfStatement",
                        "src": "3742:114:12",
                        "trueBody": {
                          "id": 2362,
                          "nodeType": "Block",
                          "src": "3783:73:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2349,
                                    "name": "nfts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2318,
                                    "src": "3793:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                                    }
                                  },
                                  "id": 2351,
                                  "indexExpression": {
                                    "id": 2350,
                                    "name": "nftsIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2327,
                                    "src": "3798:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3793:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                                    "typeString": "struct OptimismMarketplace.NFT memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2352,
                                    "name": "_idToNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1872,
                                    "src": "3811:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                      "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                    }
                                  },
                                  "id": 2356,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2353,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2331,
                                      "src": "3820:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3824:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3820:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3811:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                    "typeString": "struct OptimismMarketplace.NFT storage ref"
                                  }
                                },
                                "src": "3793:33:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                                  "typeString": "struct OptimismMarketplace.NFT memory"
                                }
                              },
                              "id": 2358,
                              "nodeType": "ExpressionStatement",
                              "src": "3793:33:12"
                            },
                            {
                              "expression": {
                                "id": 2360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3836:11:12",
                                "subExpression": {
                                  "id": 2359,
                                  "name": "nftsIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2327,
                                  "src": "3836:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2361,
                              "nodeType": "ExpressionStatement",
                              "src": "3836:11:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2334,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2331,
                      "src": "3715:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2335,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "3719:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3715:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2365,
                  "initializationExpression": {
                    "assignments": [
                      2331
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2331,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3708:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2365,
                        "src": "3703:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2330,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3703:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2333,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3712:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3703:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3729:3:12",
                      "subExpression": {
                        "id": 2337,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "3729:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2339,
                    "nodeType": "ExpressionStatement",
                    "src": "3729:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3698:164:12"
                },
                {
                  "expression": {
                    "id": 2366,
                    "name": "nfts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2318,
                    "src": "3874:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2277,
                  "id": 2367,
                  "nodeType": "Return",
                  "src": "3867:11:12"
                }
              ]
            },
            "functionSelector": "047b07bf",
            "id": 2369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyNfts",
            "nameLocation": "3380:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3389:2:12"
            },
            "returnParameters": {
              "id": 2277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "3413:12:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct OptimismMarketplace.NFT[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2274,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2273,
                        "name": "NFT",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "3413:3:12"
                      },
                      "referencedDeclaration": 1885,
                      "src": "3413:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                        "typeString": "struct OptimismMarketplace.NFT"
                      }
                    },
                    "id": 2275,
                    "nodeType": "ArrayTypeName",
                    "src": "3413:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                      "typeString": "struct OptimismMarketplace.NFT[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:14:12"
            },
            "scope": 2482,
            "src": "3371:512:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2480,
              "nodeType": "Block",
              "src": "3949:528:12",
              "statements": [
                {
                  "assignments": [
                    2377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2377,
                      "mutability": "mutable",
                      "name": "nftCount",
                      "nameLocation": "3960:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2480,
                      "src": "3955:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2376,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3955:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2381,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2378,
                        "name": "_nftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "3971:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1515_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1527,
                      "src": "3971:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1515_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1515_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3971:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3955:35:12"
                },
                {
                  "assignments": [
                    2383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2383,
                      "mutability": "mutable",
                      "name": "myListedNftCount",
                      "nameLocation": "4001:16:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2480,
                      "src": "3996:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2382,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3996:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2385,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4020:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:25:12"
                },
                {
                  "body": {
                    "id": 2417,
                    "nodeType": "Block",
                    "src": "4063:119:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2396,
                                  "name": "_idToNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1872,
                                  "src": "4075:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                    "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                  }
                                },
                                "id": 2400,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2397,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2387,
                                    "src": "4084:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2398,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4088:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "4084:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4075:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                  "typeString": "struct OptimismMarketplace.NFT storage ref"
                                }
                              },
                              "id": 2401,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1878,
                              "src": "4075:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2402,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4101:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4101:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4075:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2405,
                                "name": "_idToNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "4115:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                  "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                }
                              },
                              "id": 2409,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2406,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2387,
                                  "src": "4124:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4128:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4124:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4115:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                "typeString": "struct OptimismMarketplace.NFT storage ref"
                              }
                            },
                            "id": 2410,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "listed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1884,
                            "src": "4115:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4075:62:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2416,
                        "nodeType": "IfStatement",
                        "src": "4071:105:12",
                        "trueBody": {
                          "id": 2415,
                          "nodeType": "Block",
                          "src": "4139:37:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4149:18:12",
                                "subExpression": {
                                  "id": 2412,
                                  "name": "myListedNftCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2383,
                                  "src": "4149:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2414,
                              "nodeType": "ExpressionStatement",
                              "src": "4149:18:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2390,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2387,
                      "src": "4044:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2391,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2377,
                      "src": "4048:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4044:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2418,
                  "initializationExpression": {
                    "assignments": [
                      2387
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2387,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4037:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2418,
                        "src": "4032:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2386,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2389,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4041:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4032:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4058:3:12",
                      "subExpression": {
                        "id": 2393,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "4058:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2395,
                    "nodeType": "ExpressionStatement",
                    "src": "4058:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "4027:155:12"
                },
                {
                  "assignments": [
                    2423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2423,
                      "mutability": "mutable",
                      "name": "nfts",
                      "nameLocation": "4201:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2480,
                      "src": "4188:17:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OptimismMarketplace.NFT[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2421,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2420,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1885,
                            "src": "4188:3:12"
                          },
                          "referencedDeclaration": 1885,
                          "src": "4188:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT"
                          }
                        },
                        "id": 2422,
                        "nodeType": "ArrayTypeName",
                        "src": "4188:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2428,
                        "name": "myListedNftCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2383,
                        "src": "4218:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4208:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct OptimismMarketplace.NFT memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2425,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2424,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1885,
                            "src": "4212:3:12"
                          },
                          "referencedDeclaration": 1885,
                          "src": "4212:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                            "typeString": "struct OptimismMarketplace.NFT"
                          }
                        },
                        "id": 2426,
                        "nodeType": "ArrayTypeName",
                        "src": "4212:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                          "typeString": "struct OptimismMarketplace.NFT[]"
                        }
                      }
                    },
                    "id": 2429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4188:47:12"
                },
                {
                  "assignments": [
                    2432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2432,
                      "mutability": "mutable",
                      "name": "nftsIndex",
                      "nameLocation": "4246:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2480,
                      "src": "4241:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2431,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4241:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2434,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4258:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4241:18:12"
                },
                {
                  "body": {
                    "id": 2476,
                    "nodeType": "Block",
                    "src": "4301:155:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2445,
                                  "name": "_idToNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1872,
                                  "src": "4313:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                    "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                  }
                                },
                                "id": 2449,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2446,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2436,
                                    "src": "4322:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4326:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "4322:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4313:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                  "typeString": "struct OptimismMarketplace.NFT storage ref"
                                }
                              },
                              "id": 2450,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1878,
                              "src": "4313:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2451,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4339:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4339:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4313:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2454,
                                "name": "_idToNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "4353:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                  "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                }
                              },
                              "id": 2458,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2455,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2436,
                                  "src": "4362:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4366:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4362:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4353:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                "typeString": "struct OptimismMarketplace.NFT storage ref"
                              }
                            },
                            "id": 2459,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "listed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1884,
                            "src": "4353:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4313:62:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2475,
                        "nodeType": "IfStatement",
                        "src": "4309:141:12",
                        "trueBody": {
                          "id": 2474,
                          "nodeType": "Block",
                          "src": "4377:73:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2461,
                                    "name": "nfts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2423,
                                    "src": "4387:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                                    }
                                  },
                                  "id": 2463,
                                  "indexExpression": {
                                    "id": 2462,
                                    "name": "nftsIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2432,
                                    "src": "4392:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4387:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                                    "typeString": "struct OptimismMarketplace.NFT memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2464,
                                    "name": "_idToNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1872,
                                    "src": "4405:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$1885_storage_$",
                                      "typeString": "mapping(uint256 => struct OptimismMarketplace.NFT storage ref)"
                                    }
                                  },
                                  "id": 2468,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2467,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2465,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2436,
                                      "src": "4414:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2466,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4418:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4414:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4405:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NFT_$1885_storage",
                                    "typeString": "struct OptimismMarketplace.NFT storage ref"
                                  }
                                },
                                "src": "4387:33:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFT_$1885_memory_ptr",
                                  "typeString": "struct OptimismMarketplace.NFT memory"
                                }
                              },
                              "id": 2470,
                              "nodeType": "ExpressionStatement",
                              "src": "4387:33:12"
                            },
                            {
                              "expression": {
                                "id": 2472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4430:11:12",
                                "subExpression": {
                                  "id": 2471,
                                  "name": "nftsIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2432,
                                  "src": "4430:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2473,
                              "nodeType": "ExpressionStatement",
                              "src": "4430:11:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2439,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2436,
                      "src": "4282:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2440,
                      "name": "nftCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2377,
                      "src": "4286:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4282:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2477,
                  "initializationExpression": {
                    "assignments": [
                      2436
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2436,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4275:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2477,
                        "src": "4270:6:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2435,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4270:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2438,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4279:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4270:10:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4296:3:12",
                      "subExpression": {
                        "id": 2442,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "4296:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2444,
                    "nodeType": "ExpressionStatement",
                    "src": "4296:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "4265:191:12"
                },
                {
                  "expression": {
                    "id": 2478,
                    "name": "nfts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2423,
                    "src": "4468:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OptimismMarketplace.NFT memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2375,
                  "id": 2479,
                  "nodeType": "Return",
                  "src": "4461:11:12"
                }
              ]
            },
            "functionSelector": "1f4cc4db",
            "id": 2481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyListedNfts",
            "nameLocation": "3896:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3911:2:12"
            },
            "returnParameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2481,
                  "src": "3935:12:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NFT_$1885_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct OptimismMarketplace.NFT[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2372,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2371,
                        "name": "NFT",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "3935:3:12"
                      },
                      "referencedDeclaration": 1885,
                      "src": "3935:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$1885_storage_ptr",
                        "typeString": "struct OptimismMarketplace.NFT"
                      }
                    },
                    "id": 2373,
                    "nodeType": "ArrayTypeName",
                    "src": "3935:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$1885_storage_$dyn_storage_ptr",
                      "typeString": "struct OptimismMarketplace.NFT[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3934:14:12"
            },
            "scope": 2482,
            "src": "3887:590:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2483,
        "src": "232:4247:12",
        "usedErrors": []
      }
    ],
    "src": "32:4447:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "420": {
      "events": {},
      "links": {},
      "address": "0x55639Eaf442158331467dEd8aa1038FC72093A5e",
      "transactionHash": "0x8a2766e31eed121301c0bad99196dd0b7c38f74396d747ce54f0a68dcbf821ef"
    }
  },
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-10-10T17:06:23.294Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}